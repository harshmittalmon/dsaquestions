#include <bits/stdc++.h> 
/*************************************************
        Following is the structure of class Node:
     
        class Node{
        public:
            int data;
            Node* next;
            
            Node(int data){
                this->data = data;
                this->next = NULL;
            }
            
        }
**************************************************/

bool isCircular(Node *head) {
  if (head == NULL)
    return true;
  Node *slow = head;
  Node *fast = head;
  while(fast !=NULL && fast->next !=NULL){
    slow=slow->next;
    fast = fast->next->next;
    

    if(slow ==fast){
      if (slow==head)// why not only this condition is sufficient???
      // coz we dont want looped circular list with shape 9 but complete ciruclare list in which tail is connected to head not any other node.
      return true;
      else return false;
    } 
    

  } 
  return false;
  
}



// ANOTHER APPROACH

bool isCircular(Node *head) {
  if (head == NULL)
    return true;
  Node * temp = head->next;
  while(temp!=NULL && temp->data!=0){
    if(temp==head){
      return true;
    }
    temp->data =0;
    temp=temp->next;    

  }
  return false;
  
}
